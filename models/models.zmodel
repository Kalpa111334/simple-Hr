enum UserStatus {
    INVITED
    VERIFIED
}

model User {
    id               String            @id @default(uuid())
    name             String?
    email            String?           @unique
    pictureUrl       String?           @default('https://i.imgur.com/ZdJSK3Y.jpeg')
    tokenInvitation  String?

    status           UserStatus        @default(VERIFIED)

    // this is the role of the user for the application
    globalRole       String            @default('USER')
    password         String?           @password @omit
    createdAt        DateTime          @default(now())
    updatedAt        DateTime          @updatedAt @default(now())

    pwaSubscriptions PwaSubscription[] @relation("user")

    attendances      Attendance[]      @relation("user")
    leaves           Leave[]           @relation("user")
    leaveQuotas      LeaveQuota[]      @relation("user")
    notifications    Notification[]    @relation("user")

    @@auth()
    @@allow("all", auth().id == this.id)
    @@allow('all', auth().globalRole == 'ADMIN')

    //we only allow that user to register if they don't create an admin role
    @@allow("create", globalRole != 'ADMIN')
    @@allow("read", true)
}

model Attendance {

    id           String   @id @default(uuid())
    checkInTime  DateTime?
    checkOutTime DateTime?
    status       String?
    method       String?
    location     String?  @default(null)

    userId       String
    user         User?    @relation(fields: [userId], references: [id], name: "user")

    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model Leave {

    id          String   @id @default(uuid())
    startDate   DateTime
    endDate     DateTime
    type        String
    status      String
    documentUrl String?
    reason      String?

    userId      String
    user        User?    @relation(fields: [userId], references: [id], name: "user")

    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model LeaveQuota {

    id        String   @id @default(uuid())
    type      String
    totalDays Float
    usedDays  Float
    year      Float

    userId    String
    user      User?    @relation(fields: [userId], references: [id], name: "user")

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model Notification {

    id        String   @id @default(uuid())
    title     String
    message   String?
    type      String
    isRead    Boolean

    userId    String
    user      User?    @relation(fields: [userId], references: [id], name: "user")

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model PwaSubscription {
    id        String   @id @default(uuid())
    content   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt @default(now())

    userId    String   @default(auth().id)
    user      User     @relation(fields: [userId], references: [id], name: 'user')

    @@allow("all", true)
}

